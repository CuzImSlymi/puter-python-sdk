name: Dependency Updates

on:
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
    
    - name: Update requirements
      run: |
        # Update main requirements
        pip-compile --upgrade requirements.in || echo "No requirements.in found"
        
        # Update dev requirements if they exist
        pip-compile --upgrade requirements-dev.in || echo "No requirements-dev.in found"
    
    - name: Check for security vulnerabilities
      run: |
        pip install safety
        safety check || echo "Security check completed with warnings"
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: automated dependency updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated dependency updates generated by the dependency-update workflow.
          
          ### Changes
          - Updated Python dependencies to their latest compatible versions
          - Ran security vulnerability checks
          
          ### Testing
          - [ ] All CI checks pass
          - [ ] Manual testing if needed
          
          **Note**: This PR was automatically generated. Please review the changes carefully before merging.
        branch: chore/dependency-updates
        delete-branch: true

  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true
    
    - name: Run bandit security check
      run: |
        bandit -r puter/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-reports
        path: |
          safety-report.json
          bandit-report.json
    
    - name: Create security issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const title = 'ðŸ”’ Security Audit Alert - Vulnerabilities Detected';
          const body = `
          ## Security Audit Alert
          
          The automated security audit has detected potential vulnerabilities in the project dependencies or code.
          
          ### Action Required
          - Review the security reports in the workflow artifacts
          - Address any critical vulnerabilities
          - Update dependencies as needed
          
          ### Reports Generated
          - Safety vulnerability scan
          - Bandit security linting
          
          **Workflow Run**: [View Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          ---
          
          This issue was automatically created by the security audit workflow.
          `;
          
          // Check if security issue already exists
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['security', 'automated'],
            state: 'open'
          });
          
          if (existingIssues.data.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'automated', 'priority-high']
            });
          }